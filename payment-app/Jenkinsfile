#!groovy

node('docker') {
    configure(env)
    ws('workspace/cc-payment-api/build') {
        try {
            stage('Checkout') {
                checkout scm
            }

            dir('payment-app') {
                stage('Build (JAR)') {
                    sh '''
                        mvn clean package
                    '''
                    archive 'api/target/*.jar'
                }
            }
        } finally {
            deleteDir()
        }
    }
}

private void configure(env) {
    env.JAVA_HOME = "${tool name: 'default', type: 'hudson.model.JDK'}"
    env.MAVEN_HOME = "${tool name: 'default', type: 'hudson.tasks.Maven$MavenInstallation'}"
    env.MAVEN_OPTS = "${env.MAVEN_OPTS != null ? env.MAVEN_OPTS : ''} ${proxySystemProperties(env)}"
    env.PATH = "${env.PATH}:${env.JAVA_HOME}/bin:${env.MAVEN_HOME}/bin"
}

private proxySystemProperties(env) {
    def systemProperties = []
    if (env.http_proxy != null) {
        def proxyURL = new URL(env.http_proxy)
        systemProperties.add("-Dhttp.proxyHost=${proxyURL.getHost()}")
        systemProperties.add("-Dhttp.proxyPort=${proxyURL.getPort()}")
    }
    if (env.https_proxy != null) {
        def proxyURL = new URL(env.http_proxy)
        systemProperties.add("-Dhttps.proxyHost=${proxyURL.getHost()}")
        systemProperties.add("-Dhttps.proxyPort=${proxyURL.getPort()}")
    }
    if (env.no_proxy != null) {
        systemProperties.add("-Dhttp.nonProxyHosts=${env.no_proxy}")
    }
    return systemProperties.join(' ')
}
